# triggers shall also be defined in Azure DevOps pipeline settings

pr:
  - main

name: $(Date:yyyyMMdd)-$(Hours).$(Minutes)-$(SourceBranch).$(Rev:r)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: infra
    displayName: Deploy infra
    variables:
      - group: stg
    jobs:
      - deployment: deploy
        displayName: Deploy stg
        environment: staging.infra
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  displayName: bicep/deploy
                  inputs:
                    azureSubscription: '$(azureRmServiceConnectionName)'
                    scriptType: 'bash'
                    scriptLocation: 'inlineScript'
                    inlineScript: './deploy'
                    workingDirectory: 'bicep'
                  env:
                    AZ_SUBSCRIPTION_ID: $(AZ_SUBSCRIPTION_ID)
                    AZ_LOCATION: $(AZ_LOCATION)
                    AZ_PREFIX: $(AZ_PREFIX)
                    AZ_ENVIRONMENT: $(AZ_ENVIRONMENT)
                    AZ_NAME: $(AZ_NAME)
                    AZ_OWNER: $(AZ_OWNER)
                    AZ_SLOT_POSTFIX: $(Build.SourceBranchName)

  - stage: app
    displayName: Deploy app
    variables:
      - group: pr
    jobs:
      - job: docker
        displayName: Release app
        steps:
          - task: Docker@2
            displayName: login
            inputs:
              containerRegistry: '$(registryServiceConnectionName)'
              command: 'login'
          - script: |
              IMAGE_NAME=artery docker/build_and_test_image ls -al
            displayName: build
          - script: |
              REGISTRY_IMAGE_TAG=$(Build.BuildNumber) REGISTRY_FQDN=$(dockerRepositoryName) docker/tag_and_push_image
            displayName: push
      - job: slot
        dependsOn: docker
        displayName: Deploy AppService slot
        steps:
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy to PR
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: '$(azureRmServiceConnectionName)'
              appType: 'webAppContainer'
              WebAppName: '$(appServiceName)'
              deployToSlotOrASE: true
              ResourceGroupName: '$(appServiceRgName)'
              SlotName: '$(Build.SourceBranchName)'
              DockerNamespace: '$(dockerRegistryFQDN)'
              DockerRepository: '$(dockerRepositoryName)'
              DockerImageTag: '$(Build.BuildNumber)'
              AppSettings: |
                -PRIVATE_BACKEND_URL "https://aswestgarterysa.blob.core.windows.net/public/openapi.yaml" -SWAGGER_STATS_USERNAME "$(Build.SourceBranchName)" -SWAGGER_STATS_PASSWORD "$(Build.SourceVersion)"
              # -FUNCTIONS_EXTENSION_VERSION "~3"
